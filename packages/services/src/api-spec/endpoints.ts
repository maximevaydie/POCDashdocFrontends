// This file was generated by api-spec/openapi_to_ts.py. Do not edit it manually.

import {apiService} from "@dashdoc/web-common";
import * as z from "zod";

// @ts-ignore
import * as DynamicForm from "./models/DynamicForm";
// @ts-ignore
import * as ExtensionTriggers from "./models/ExtensionTriggers";
// @ts-ignore
import * as Extensions from "./models/Extensions";

type AccountTriggersEndpointSpec = {
    method: "get";
    path: "/extension-triggers/account-triggers/";
    name: "AccountTriggers";
    params: {};
    body: {};
    response: ExtensionTriggers.AccountTriggersResponse /* status: 200 */;
};

export async function fetchAccountTriggers(
    _params: AccountTriggersEndpointSpec["params"]
): Promise<AccountTriggersEndpointSpec["response"]> {
    const response = await apiService.get(`/extension-triggers/account-triggers/`, {
        apiVersion: "web",
    });
    return await ExtensionTriggers.AccountTriggersResponseSchema.parseAsync(response);
}

type ExtensionsEndpointSpec = {
    method: "get";
    path: "/extensions/";
    name: "Extensions";
    params: {};
    body: {};
    response: {
        results: Extensions.Extension[];
        count: number;
        previous: string | null;
        next: string | null;
    } /* status: 200 */;
};

export async function fetchExtensions(
    _params: ExtensionsEndpointSpec["params"]
): Promise<ExtensionsEndpointSpec["response"]> {
    const response = await apiService.get(`/extensions/`, {apiVersion: "web"});
    return await z
        .object({
            results: z.array(Extensions.ExtensionSchema),
            count: z.number(),
            previous: z.string().nullable(),
            next: z.string().nullable(),
        })
        .parseAsync(response);
}

type ExtensionEndpointSpec = {
    method: "get";
    path: "/extensions/{uid}/";
    name: "Extension";
    params: {
        uid: string;
    };
    body: {};
    response: Extensions.Extension /* status: 200 */;
};

export async function fetchExtension(
    _params: ExtensionEndpointSpec["params"]
): Promise<ExtensionEndpointSpec["response"]> {
    const response = await apiService.get(`/extensions/${_params["uid"]}/`, {apiVersion: "web"});
    return await Extensions.ExtensionSchema.parseAsync(response);
}

type InstantiateExtensionEndpointSpec = {
    method: "post";
    path: "/extensions/{uid}/instantiate/";
    name: "InstantiateExtension";
    params: {
        uid: string;
    };
    body: Extensions.InstantiateExtensionRequest;
    response: Extensions.ExtensionInstantiatedResponse /* status: 200 */;
};

export async function fetchInstantiateExtension(
    _params: InstantiateExtensionEndpointSpec["params"],
    body: InstantiateExtensionEndpointSpec["body"]
): Promise<InstantiateExtensionEndpointSpec["response"]> {
    const response = await apiService.post(`/extensions/${_params["uid"]}/instantiate/`, body, {
        apiVersion: "web",
    });
    return await Extensions.ExtensionInstantiatedResponseSchema.parseAsync(response);
}

type TriggerTripSendToNetworkEndpointSpec = {
    method: "post";
    path: "/extensions/{uid}/trigger-trip-send-to-network/";
    name: "TriggerTripSendToNetwork";
    params: {
        uid: string;
    };
    body: Extensions.TripSendToNetworkTriggerRequest;
    response: void /* status: 204 */;
};

export async function fetchTriggerTripSendToNetwork(
    _params: TriggerTripSendToNetworkEndpointSpec["params"],
    body: TriggerTripSendToNetworkEndpointSpec["body"]
): Promise<TriggerTripSendToNetworkEndpointSpec["response"]> {
    await apiService.post(`/extensions/${_params["uid"]}/trigger-trip-send-to-network/`, body, {
        apiVersion: "web",
    });
    return;
}

type UninstantiateExtensionEndpointSpec = {
    method: "post";
    path: "/extensions/{uid}/uninstantiate/";
    name: "UninstantiateExtension";
    params: {
        uid: string;
    };
    body: {};
    response: void /* status: 204 */;
};

export async function fetchUninstantiateExtension(
    _params: UninstantiateExtensionEndpointSpec["params"],
    body: UninstantiateExtensionEndpointSpec["body"]
): Promise<UninstantiateExtensionEndpointSpec["response"]> {
    await apiService.post(`/extensions/${_params["uid"]}/uninstantiate/`, body, {
        apiVersion: "web",
    });
    return;
}
